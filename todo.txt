Goal:
- Sphere shaped motors
- Directional, omni-directional
- Wind reciever parameters
(https://www.youtube.com/watch?v=MKX45_riWQA&t=627s)
(https://www.youtube.com/watch?v=dDgyBKkSf7A&t=742s)

TASKS:
[ ] wind simulation
	[+] calculate 2D noise texture (or just steal a texture from internet :) )
	[+] using noise texture, apply translating of the grasses, care stretching as in the talk
	[+] omni-directional wind around mouse pos
	[+] radius around the mouse pos
	[ ] stretch avoid calculation makes the grasses thinner, allow a bit of stretching based on the
		speed and etc.
	[+] Q for switch between omni and directional
	[ ] Simulate the wind instead of just applying noise to the vertex

BUGS:
[ ] wind noise cuts after some time (the noise should work seamlessly)
[ ] when vsync is active, input is lagging
[ ] remove the old pipeline

OPTIONALS:
[ ] compute shaders
	- ? wind simulation
	- ? cloud rendering
	- ? wave rendering
[ ] real-time terrain rendering
[ ] calculate MVP matrix on CPU
[ ] create a 2D terrain using tiles
[ ] frustum culling for tiles
[ ] ? occlusion culling
[ ] ambient occlusion (render to texture)
	- I think grass rendering would benefit more from ambent occlusion than shadows.
		but if it is not enough, go for shadows. It can be costly too, so may just scratch out or disable
		and find a way to show bottom of grasses darker(gradiently darker).
	- lighting with forward rendering is not convinient since the scenes will consist of a lot of meshes.
		so go for deferred if u want to achieve this.	
[ ] sun light
[ ] shadow